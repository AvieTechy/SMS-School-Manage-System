# Generated by Django 2.2.2 on 2022-05-20 03:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=225)),
                ('name', models.IntegerField()),
                ('subject', models.CharField(max_length=225)),
                ('ss', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('maths_name', models.CharField(blank=True, max_length=255, null=True)),
                ('physics_name', models.CharField(blank=True, max_length=255, null=True)),
                ('chemis_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bio_name', models.CharField(blank=True, max_length=255, null=True)),
                ('history_name', models.CharField(blank=True, max_length=255, null=True)),
                ('geo_name', models.CharField(blank=True, max_length=255, null=True)),
                ('GDCD_name', models.CharField(blank=True, max_length=255, null=True)),
                ('liters_name', models.CharField(blank=True, max_length=255, null=True)),
                ('PE_name', models.CharField(blank=True, max_length=255, null=True)),
                ('DE_name', models.CharField(blank=True, max_length=255, null=True)),
                ('languages_name', models.CharField(blank=True, max_length=255, null=True)),
                ('major_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tech_name', models.CharField(blank=True, max_length=255, null=True)),
                ('computer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('maths_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('physics_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('chemis_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('bio_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('history_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('geo_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('GDCD_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('liters_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('PE_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('DE_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('languages_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('major_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tech_name_id', models.CharField(blank=True, max_length=255, null=True)),
                ('computer_name_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('mul', models.CharField(max_length=225)),
                ('form', models.CharField(default='TN', max_length=225)),
                ('date', models.DateField()),
                ('start', models.TimeField()),
                ('end', models.TimeField()),
                ('sub', models.CharField(max_length=225)),
                ('is_active', models.BooleanField(default=True)),
                ('number_q', models.IntegerField()),
                ('file', models.FileField(upload_to='')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Classes')),
            ],
        ),
        migrations.CreateModel(
            name='SessionYearModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_start_year', models.DateField()),
                ('session_end_year', models.DateField()),
            ],
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=255)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='')),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Host'), (2, 'Teacher'), (3, 'Student')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255, null=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Classes')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('gender', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=11, null=True)),
                ('position', models.CharField(max_length=255)),
                ('major', models.CharField(max_length=255)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectsTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('m1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('m2', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('m3', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('m4', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('t1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('final', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('term', models.CharField(default='', max_length=3)),
                ('avg', models.FloatField(blank=True, null=True)),
                ('avg_y', models.FloatField(blank=True, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Classes')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Students')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('m1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('m2', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('m3', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('m4', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('t1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('final', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('avg', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('target', models.FloatField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('term', models.CharField(default='', max_length=3)),
                ('alf_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='students',
            name='admin',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='students',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='SMS_app.Classes'),
        ),
        migrations.AddField(
            model_name='students',
            name='session_year_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.SessionYearModel'),
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_exam_marks', models.FloatField(default=0)),
                ('subject_assignment_marks', models.FloatField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now_add=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Classes')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Students')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineClassRoom',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=255)),
                ('room_pwd', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Classes')),
                ('session_years', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.SessionYearModel')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Teachers')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTeacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Teachers')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Students')),
            ],
        ),
        migrations.CreateModel(
            name='LessonTimeSet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('time', models.CharField(max_length=255)),
                ('time_start', models.TimeField(blank=True, null=True)),
                ('time_end', models.TimeField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.SessionYearModel')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportTeacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Teachers')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Students')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackTeacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Teachers')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Students')),
            ],
        ),
        migrations.CreateModel(
            name='Exam_student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.IntegerField(default=0)),
                ('sum', models.FloatField(blank=True, default=0, null=True)),
                ('finish', models.BooleanField(default=False)),
                ('time_finish', models.CharField(blank=True, max_length=255, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Students')),
            ],
        ),
        migrations.AddField(
            model_name='exam',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Teachers'),
        ),
        migrations.AddField(
            model_name='exam',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.SessionYearModel'),
        ),
        migrations.AddField(
            model_name='classes',
            name='GVCN',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classes',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.SessionYearModel'),
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Attendance')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='SMS_app.Students')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='GVMB_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Teachers'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Classes'),
        ),
        migrations.CreateModel(
            name='Answer_student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ques_num', models.IntegerField()),
                ('stn_ans_TN', models.CharField(blank=True, max_length=255, null=True)),
                ('stn_ans_TL', models.TextField(blank=True, max_length=255, null=True)),
                ('bool', models.BooleanField(default=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Exam_student')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_true', models.CharField(blank=True, max_length=255, null=True)),
                ('ques_num', models.IntegerField()),
                ('mark', models.FloatField()),
                ('ques', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SMS_app.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='aim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mod', models.FloatField(blank=True, max_length=225, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('alf_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminHost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
